if(TARGET zlibstatic OR TARGET zlib)
    if(NOT TARGET ZLIB::ZLIB)
        if(TARGET zlibstatic)
            add_library(ZLIB::ZLIB ALIAS zlibstatic)
        else()
            add_library(ZLIB::ZLIB ALIAS zlib)
        endif()
    endif()
else()
    include(FetchContent)
    set(ZLIB_VERSION 1.3.1 CACHE STRING "zlib version")
    set(ZLIB_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
    set(ZLIB_BUILD_TESTS OFF CACHE BOOL "" FORCE)
    FetchContent_Declare(zlib URL https://zlib.net/zlib-${ZLIB_VERSION}.tar.gz)
    FetchContent_MakeAvailable(zlib)
    if(TARGET zlibstatic AND NOT TARGET ZLIB::ZLIB)
        add_library(ZLIB::ZLIB ALIAS zlibstatic)
    elseif(TARGET zlib AND NOT TARGET ZLIB::ZLIB)
        add_library(ZLIB::ZLIB ALIAS zlib)
    endif()
endif()
# Provide legacy FindZLIB variables only for consumers that still look them up
if(MSVC AND NOT CMAKE_GENERATOR MATCHES "Ninja")
    set(ZLIB_LIBRARY "${zlib_BINARY_DIR}/$<CONFIG>/zlibstatic$<$<CONFIG:Debug>:d>.lib" CACHE STRING "" FORCE)
else()
    # single-config generators (e.g. Ninja) put the lib directly in binary dir
    if(TARGET zlibstatic)
        set(_ZLIB_CANDIDATE "${zlib_BINARY_DIR}/zlibstatic.lib")
    elseif(TARGET zlib)
        set(_ZLIB_CANDIDATE "${zlib_BINARY_DIR}/libz.a")
    endif()
    if(_ZLIB_CANDIDATE AND EXISTS "${_ZLIB_CANDIDATE}")
        set(ZLIB_LIBRARY "${_ZLIB_CANDIDATE}" CACHE STRING "" FORCE)
    else()
        # fallback (may still be generated later, acceptable as very few consumers use this now)
        set(ZLIB_LIBRARY "${zlib_BINARY_DIR}/zlibstatic.lib" CACHE STRING "" FORCE)
    endif()
endif()
set(ZLIB_LIBRARIES "${ZLIB_LIBRARY}" CACHE STRING "" FORCE)
set(ZLIB_INCLUDE_DIR "${zlib_SOURCE_DIR};${zlib_BINARY_DIR}" CACHE STRING "" FORCE)
set(ZLIB_FOUND TRUE CACHE BOOL "" FORCE)
